akka.stream.materializer.subscription-timeout.timeout = 300s
akka.http.server.idle-timeout = 300s
akka.http.parsing.max-buffer-size = 1m
akka.http.server.http2.server-side-keep-alive = on
akka.http.server.parsing.max-content-length = 512m
akka.http.parsing.max-content-length = 500m
akka.http.parsing.max-to-strict-bytes = 500m

env = prod

s3 {
  credentials {
    access_key_id = ${?AWS_ACCESS_KEY_ID}
    secret_key = ${?AWS_SECRET_ACCESS_KEY}
  }
  bucket-name = ${?AWS_S3_BUCKET}
}

exports {
  s3-folder-prefix = ""
  s3-folder-prefix = ${?EXPORTS_BUCKET_FOLDER_PREFIX}
}

feature-guides {
  s3-folder-prefix = ""
  s3-folder-prefix = ${?FEATURE_GUIDE_BUCKET_PREFIX_FOLDER}
}

dashboard {
  notifications {
    gov-notify-api-key = ${GOV_NOTIFY_API_KEY}
    access-request-emails = ${ACCESS_REQUEST_EMAIL}
  }

  team-email: ${TEAM_EMAIL}

  routes {
    # If ask takes more time than this to complete the request is failed
    ask-timeout = 5s
  }
}

server {
  host = "0.0.0.0"
  host = ${?SERVER_HOST}

  port = 8081
  port = ${?SERVER_PORT}
}

cirium {
  data-uri = ""
  data-uri = ${?CIRIUM_DATA_URI}
}

drt {
  domain = ${DRT_DOMAIN}

  use-https = true
  use-https = ${?USE_HTTPS}
}

nebo {
    port-codes = "BFS,BHD,BHX,BRS,CWL,EMA,EDI,GLA,INV,LBA,LCY,LGW,LHR,LPL,LTN,MAN,MME,NCL,NWI,STN"
    port-codes = ${?NEBO_PORT_CODES}
}

akka.http {
  client {
    connecting-timeout = 30s
  }
}

postgresDB {
  connectionPool = "HikariCP"
  dataSourceClass = "org.postgresql.ds.PGSimpleDataSource"
  properties = {
    serverName = "localhost"
    serverName = ${?AGGDB_HOST}
    portNumber = "5432"
    databaseName = "aggregated"
    databaseName = ${?AGGDB_DB}
    user = "drt"
    user = ${?AGGDB_USER}
    password = "drt"
    password = ${?AGGDB_PASSWORD}
  }
  numThreads = 10
}

key-cloak {
  url: ${?KEY_CLOAK_URL}
  token_url: ${?KEY_CLOAK_TOKEN_URL}
  client_id: ${?KEY_CLOAK_CLIENT_ID}
  client_secret: ${?KEY_CLOAK_CLIENT_SECRET}
  username: ${?KEY_CLOAK_USERNAME}
  password: ${?KEY_CLOAK_PASSWORD}
}

user-tracking {
    feature-flag = true
    feature-flag = ${?USER_TRACKING_FEATURE_FLAG}
    schedule-frequency-minutes = 60
    schedule-frequency-minutes = ${?USER_TRACKING_SCHEDULE_FREQUENCY_MINUTES}
    inactivity-days = 60
    inactivity-days = ${?USER_TRACKING_INACTIVITY_DAYS}
    deactivate-after-warning-days = 7
    deactivate-after-warning-days = ${?USER_TRACKING_DEACTIVATE_AFTER_WARNING_DAYS}
}

seminar-registration {
    schedule-frequency-minutes = 180
    schedule-frequency-minutes = ${?SEMINAR_REGISTRATION_SCHEDULE_FREQUENCY_MINUTES}
}
